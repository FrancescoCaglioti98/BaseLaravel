version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel_app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
        env_file:
            - .env
        depends_on:
            - db
        networks:
            - app_network

    db:
        image: postgres:15-alpine
        container_name: postgres_db
        restart: unless-stopped
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        volumes:
            - pgdata:/var/lib/postgresql/data
        ports:
            - "${DB_PORT}:5432"
        networks:
            - app_network

    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        ports:
            - "8001:8001"
        volumes:
            - .:/var/www
            - ./Docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - app_network


    artisan:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: artisan_runner
        working_dir: /var/www
        entrypoint: [ "php", "artisan" ]
        volumes:
            - .:/var/www
        env_file:
            - .env
        depends_on:
            - db
        networks:
            - app_network

    composer:
        image: composer:2
        container_name: composer_runner
        working_dir: /var/www
        entrypoint: [ "composer", "install", "--no-dev", "--optimize-autoloader" ]
        volumes:
            - .:/var/www
        depends_on:
            - app
        networks:
            - app_network

    node:
        image: node:18
        container_name: node_runner
        working_dir: /var/www
        entrypoint: [ "/bin/sh", "-c", "npm install && npm run build" ]
        volumes:
            - .:/var/www
        depends_on:
            - app
        networks:
            - app_network

networks:
    app_network:
        driver: bridge

volumes:
    pgdata:
